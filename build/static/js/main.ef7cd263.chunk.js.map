{"version":3,"sources":["components/PersonForm.js","components/Filter.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["PersonForm","props","value","name","onChange","onNameChange","type","number","onNumberChange","Filter","Persons","people","onDelete","map","person","key","id","data-id","onClick","Notification","className","message","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","nameFilter","setNameFilter","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","useEffect","noteService","showTimedMessage","timeout","setTimeout","peopleToShow","filter","nameInLower","toLowerCase","queryInLower","includes","onSubmit","event","preventDefault","matchingPerson","find","window","confirm","updateInfo","updatedPerson","newPerson","createdPerson","concat","target","targetId","parseInt","dataset","selectedPerson","filteredPersons","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef7cd263.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = props => {\n  return (\n    <div>\n      Name: <input value={props.name} onChange={props.onNameChange} />\n      <br />\n      Phone number: <input type=\"tel\" value={props.number} onChange={props.onNumberChange} />\n    </div>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Filter = props => {\n  return (\n    <div>\n      Filter by name: <input value={props.value} onChange={props.onChange} />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst Persons = ({ people, onDelete }) => {\n  return (\n    <ul>\n      {people.map(person => {\n        return (\n          <li key={person.id}>\n            {person.name} : {person.number}\n            <button data-id= {person.id} onClick={onDelete}>Delete</button>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst Notification = ({ className, message }) => {\n  return (\n    <div className={className}>\n      <h3>{message}</h3>\n    </div>\n  )\n}\n\nexport default Notification\n","import axios from 'axios'\nconst baseUrl = 'https://shielded-plains-82113.herokuapp.com/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst destroy = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, destroy }\n","import React, { useEffect, useState } from 'react'\n\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport noteService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [nameFilter, setNameFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(persons => {\n        setPersons(persons)\n      })\n  }, [])\n\n  const showTimedMessage = (message, timeout) => {\n    setNotificationMessage(message)\n    setTimeout(() => setNotificationMessage(null), timeout)\n  }\n\n  const showTimedErrorMessage = (message, timeout) => {\n    setErrorMessage(message)\n    setTimeout(() => setErrorMessage(null), timeout)\n  }\n\n  const handleNameChange = event => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = event => {\n    setNameFilter(event.target.value)\n  }\n\n  const handleFormSubmit = event => {\n    event.preventDefault()\n\n    const matchingPerson = persons.find(person => person.name === newName)\n    if (matchingPerson) {\n      const result = window.confirm(\n        `${newName} is already added to the phonebook. Would you like to replace their number with a new one?`\n      )\n      if (!result) {\n        return false\n      }\n      const updateInfo = {\n        ...matchingPerson,\n        number: newNumber\n      }\n      noteService\n        .update(matchingPerson.id, updateInfo)\n        .then(updatedPerson => {\n          setPersons(persons.map(person => person.id === updatedPerson.id ? updatedPerson : person))\n          showTimedMessage(`Updated ${matchingPerson.name}`, 2000)\n        })\n\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      }\n\n      noteService\n        .create(newPerson)\n        .then(createdPerson => {\n          setPersons(persons.concat(createdPerson))\n          showTimedMessage(`Added ${newPerson.name}`, 2000)\n        })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handlePersonDelete = event => {\n    const targetId = parseInt(event.target.dataset.id)\n    const selectedPerson = persons.find(person => person.id === targetId)\n    const result = window.confirm(`Are you sure you want to remove ${selectedPerson.name}?`)\n    if (result) {\n      const filteredPersons = persons.filter(person => person.id !== targetId)\n      noteService\n        .destroy(targetId)\n        .then(() => {\n          showTimedMessage(`Removed ${selectedPerson.name}`, 2000)\n        })\n        .catch(error => {\n          showTimedErrorMessage(`${selectedPerson.name} was already removed.`, 2000)\n        })\n        .then(() => {\n          setPersons(filteredPersons)\n        })\n    }\n  }\n\n  const peopleToShow = nameFilter === '' ? persons : persons.filter(person => {\n    const nameInLower = person.name.toLowerCase(),\n      queryInLower = nameFilter.toLowerCase()\n    return nameInLower.includes(queryInLower)\n  })\n\n  return (\n    <div>\n      {notificationMessage ? (\n        <Notification message={notificationMessage} className=\"success\" />\n      ) : ''}\n      {errorMessage ? (\n        <Notification message={errorMessage} className=\"error\" />\n      ) : ''}\n      <h2>Phonebook</h2>\n      <form onSubmit={handleFormSubmit}>\n        <h3>Add a new entry</h3>\n        <PersonForm\n          name={newName}\n          number={newNumber}\n          onNameChange={handleNameChange}\n          onNumberChange={handleNumberChange}\n        />\n        <button type=\"submit\">Save entry</button>\n      </form>\n      <h3>Numbers</h3>\n      <Filter value={nameFilter} onChange={handleFilterChange} />\n      <Persons people={peopleToShow} onDelete={handlePersonDelete} />\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}